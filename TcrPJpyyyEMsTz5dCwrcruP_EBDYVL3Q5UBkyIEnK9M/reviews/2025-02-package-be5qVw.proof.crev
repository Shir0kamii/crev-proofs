----- BEGIN CREV PROOF -----
kind: package review
version: -1
date: 2025-02-12T13:45:47.423579838+01:00
from:
  id-type: crev
  id: TcrPJpyyyEMsTz5dCwrcruP_EBDYVL3Q5UBkyIEnK9M
  url: https://github.com/Shir0kamii/crev-proofs
package:
  source: https://crates.io
  name: cfg-if
  version: 1.0.0
  revision: e60fa1efeab0ec6e90c50d93ec526e1410459c23
  digest: YmRVto2mw7U7GJhrOe13k_5Sgg9TcQWK1NuLN2Qiz5E
review:
  thoroughness: high
  understanding: high
  rating: strong
comment: |-
  A very simple crate hosted by rust-lang and containing a single macro-by-example.
  
  No release since 2020 but a dependabot MR was merged 4 months ago. Not sure if this
  should be considered unmaintained.
  
  `cargo test` does not work on latest rust (1.84) because of new lints added since last release,
  but it does work on 1.46 (latest stable at the time of last release).
----- SIGN CREV PROOF -----
s00wVL6UgNz0qeTmBn6mMwlztx2gFp2v3Xdak53mX7ts3Al4reynXqJw7OzQgrSXSQpjftxR7mF7dJIU6dXqDw
----- END CREV PROOF -----

----- BEGIN CREV PROOF -----
kind: package review
version: -1
date: 2025-02-24T21:32:39.772308702+01:00
from:
  id-type: crev
  id: TcrPJpyyyEMsTz5dCwrcruP_EBDYVL3Q5UBkyIEnK9M
  url: https://github.com/Shir0kamii/crev-proofs
package:
  source: https://crates.io
  name: once_cell
  version: 1.20.2
  revision: 4fbd4a53509ca59c8e09efc2ab0a22f21de70f7e
  digest: eNwrvzV_0KGDHiU82qhW3PHql85vs9oBOFoLAW7JYTU
review:
  thoroughness: medium
  understanding: high
  rating: positive
comment: |-
  A great crate sprinkled with unsafe code.
  
  I reviewed the three implementations of `sync::OnceCell`, and all of them seem to be sound.
----- SIGN CREV PROOF -----
7opzKQb7REh1NuPnRofhlOilqjpGVzH_1GTnEiAldQz1QKBvZgxJjtNJTKk6kB2cnNcVblkl8Lwq9DvCydfnDQ
----- END CREV PROOF -----

----- BEGIN CREV PROOF -----
kind: package review
version: -1
date: 2025-02-26T20:22:26.343306692+01:00
from:
  id-type: crev
  id: TcrPJpyyyEMsTz5dCwrcruP_EBDYVL3Q5UBkyIEnK9M
  url: https://github.com/Shir0kamii/crev-proofs
package:
  source: https://crates.io
  name: num-traits
  version: 0.2.19
  revision: 7ec3d41d39b28190ec1d42db38021107b3951f3a
  digest: G5kM1-75iQi3jHV9Jkr7WEDQGvZKQgSABPd6vf9ZnJE
review:
  thoroughness: medium
  understanding: high
  rating: positive
comment: |-
  The de facto crate for traits about numbers and their operations.
  
  The documentation is great with a few exceptions (e.g. the byte traits).
  The tests are decent, both in quality and quantity, but could be improved.
  It uses a very simple build script that is safe.
  
  It uses `macro_rule` a lot, hindering readability in places, but greatly
  reducing the verbosity. I find that it tends to stay manageable.
  
  It is still maintained, but it is clear the maintainer and the few people
  helping him are having a hard time keeping up with issues and PRs.
  
  The only things I didn't review are the `decode_integer`/`total_cmp` functions
  in the `float` module and the `reverse_bits_fallback` function in the `int`
  module. I don't know enough about floating-point arithmetic and bit manipulation
  to understand them.
----- SIGN CREV PROOF -----
m06LPz70O6y_pZgxbBa1TJCNFkCW0ff9NzJDFDs4GSuvplv3ZGK4PaDMOdSXAbRoadZzuo6epWEPME-CZdfiBw
----- END CREV PROOF -----

